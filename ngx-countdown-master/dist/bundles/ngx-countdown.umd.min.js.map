{"version":3,"file":"ngx-countdown.umd.min.js","sources":["~/ngx-countdown/src/app/modules/services/count-down.service.ts","~/ngx-countdown/src/app/modules/count-down/count-down.component.ts","~/ngx-countdown/src/app/modules/count-down/count-down.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nexport interface ICountdownOptions {\n  theme?: string;\n  format?: string;\n  onStart?: Function;\n  onComplete?: Function;\n}\n\nexport interface ICountdownData {\n  timeInterval: number;\n  theme: string;\n  format: string;\n  object: any;\n  onStart: Function;\n  onComplete: Function;\n}\nexport class CountDownService {\n\n  static THEMES: Array<string> = ['default', 'material', 'bootstrap'];\nprivate uniquecountdown: number = 0;\nprivate countDownOptions: ICountdownOptions;\nconstructor(){\n    this.countDownOptions = {\n      theme: \"default\",\n      format: \"hh : mm : ss\"\n    }\n  }\n/**\n * @param {?} options\n * @return {?}\n */\nsetCoundownOptions(options: ICountdownOptions) {\n    let /** @type {?} */ countdownOptions: ICountdownOptions;\n    countdownOptions = options;\n    countdownOptions = countdownOptions || {\n      theme: \"default\",\n      format: \"hh : mm : ss\"\n    };\n    let /** @type {?} */ theme: string;\n    if (countdownOptions.theme) {\n      theme = CountDownService.THEMES.indexOf(countdownOptions.theme) > -1 ? countdownOptions.theme : \"default\";\n    }else {\n      theme = \"default\";\n    }\n\n    let /** @type {?} */ format: string;\n    if (!countdownOptions.format) {\n      format = \"hh : mm : ss\"\n    }\n    else {\n      format = countdownOptions.format;\n    }\n    this.countDownOptions =  countdownOptions;\n  }\n/**\n * @return {?}\n */\ngetdefaultCountDownOptions(){\n    return this.countDownOptions;\n  }\n/**\n * @param {?} s\n * @param {?} f\n * @return {?}\n */\ndhms(s, f) { // seconds, format\n    var /** @type {?} */ d = 0;\n    var /** @type {?} */ h = 0;\n    var /** @type {?} */ m = 0;\n    switch (true) {\n      case (s > 86400):\n        d = Math.floor(s/86400);\n        s -= d * 86400;\n      case (s > 3600):\n        h = Math.floor(s / 3600);\n        s -= h * 3600;\n      case (s > 60):\n        m = Math.floor(s/60);\n        s -= m * 60;\n    }\n    if (f != null) {\n      var /** @type {?} */ f = f.replace('dd', (d < 10) ? \"0\" + d : d);\n      f = f.replace('d', d);\n      f = f.replace('hh', (h < 10) ? \"0\" + h : h);\n      f = f.replace('h', h);\n      f = f.replace('mm', (m < 10) ? \"0\" + m : m);\n      f = f.replace('m', m);\n      f = f.replace('ss', (s < 10) ? \"0\" + s : s);\n      f = f.replace('s', s);\n    }\n    else {\n      f = d + ':' + h + ':' + m + ':' + s;\n    }\n    return f; // :) omg...\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CountDownService_tsickle_Closure_declarations() {\n/** @type {?} */\nCountDownService.THEMES;\n/** @type {?} */\nCountDownService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCountDownService.ctorParameters;\n/** @type {?} */\nCountDownService.prototype.uniquecountdown;\n/** @type {?} */\nCountDownService.prototype.countDownOptions;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, OnInit , Input, Output, EventEmitter} from '@angular/core';\nimport { CountDownService, ICountdownOptions, ICountdownData } from '../services/count-down.service';\nexport class CountDownComponent implements OnInit {\nprivate format: string;\nprivate finishTime: number;\nprivate timer: any;\nprivate theme: string;\npublic countdown: ICountdownData;\npublic date: string = \" - \";\n   time: number;\n   onStart = new EventEmitter<string>();\n   onComplete = new EventEmitter<string>();\n   object: any;\n\t singleFormat: string;\n   selectedtheme: string = \"default\";\n/**\n * @param {?} _countDownService\n */\nconstructor(private _countDownService: CountDownService) {}\n/**\n * @return {?}\n */\nngOnInit() {\n    this.startCountDown();\n  }\n/**\n * @param {?} data\n * @return {?}\n */\nisFunction(data: any) {\n    return typeof data === \"function\";\n  }\n/**\n * @return {?}\n */\nstartCountDown() {\n    let /** @type {?} */ countdownOptions: ICountdownOptions;\n    countdownOptions = this._countDownService.getdefaultCountDownOptions();\n    this.countdown = {\n      timeInterval: this.time,\n      object:     this.object,\n      format:     this.singleFormat || countdownOptions.format,\n      theme:      this.selectedtheme + '-countdown-timer' || countdownOptions.theme + '-countdown-timer',\n      onStart:    countdownOptions.onStart && this.isFunction(countdownOptions.onStart) ? countdownOptions.onStart : null,\n      onComplete: countdownOptions.onComplete && this.isFunction(countdownOptions.onComplete) ? countdownOptions.onComplete : null\n    };\n    this.onStart.emit(JSON.stringify(this.countdown));\n    if (countdownOptions.onStart && this.isFunction(countdownOptions.onStart)) {\n      countdownOptions.onStart.call(this, this.countdown);\n    }\n    this.finishTime = this.countdown.timeInterval;\n    var /** @type {?} */ that = this;\n    this.timer = setInterval(function() {\n      if (that.finishTime == 0) {\n        if (countdownOptions.onComplete && that.isFunction(countdownOptions.onComplete)) {\n          countdownOptions.onComplete.call(that, that.countdown);\n        }\n        that.onComplete.emit(that.countdown.toString());\n        clearInterval(that.timer);\n      }\n      else {\n        that.finishTime = that.finishTime - 1;\n        that.date = that._countDownService.dhms(that.finishTime, that.countdown.format);\n      }\n    }, 1000)\n  }\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'app-count-down',\n  template: `\n    <div [ngClass]=\"countdown.theme\">   <!--countdown.theme -->\n      <span class=\"timer\">{{date}}</span>\n    </div>\n  `,\n  styles: [`\n    .default-countdown-timer{\n      border: 1px solid #ddd;\n      color: #3c763d;\n      background-color: transparent;\n      padding: 10px 15px;\n      margin-bottom: 20px;\n      border-radius: 4px;\n      display: inline-block;\n    }\n    .bootstrap-countdown-timer {\n      color: #3c763d;\n      background-color: #dff0d8;\n      border-color: #d6e9c6;\n      padding: 10px 15px;\n      margin-bottom: 20px;\n      border: 1px solid #d6e9c6;\n      border-radius: 4px;\n      display: inline-block;\n    }\n    .material-countdown-timer{\n      color: #3c763d;\n      background-color: #dff0d8;\n      border-color: #d6e9c6;\n      padding: 10px 15px;\n      margin-bottom: 20px;\n      border: 1px solid transparent;\n      border-radius: 0px;\n      display: inline-block;\n    }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: CountDownService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'time': [{ type: Input },],\n'onStart': [{ type: Output },],\n'onComplete': [{ type: Output },],\n'object': [{ type: Input },],\n'singleFormat': [{ type: Input },],\n'selectedtheme': [{ type: Input },],\n};\n}\n\nfunction CountDownComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nCountDownComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCountDownComponent.ctorParameters;\n/** @type {?} */\nCountDownComponent.propDecorators;\n/** @type {?} */\nCountDownComponent.prototype.format;\n/** @type {?} */\nCountDownComponent.prototype.finishTime;\n/** @type {?} */\nCountDownComponent.prototype.timer;\n/** @type {?} */\nCountDownComponent.prototype.theme;\n/** @type {?} */\nCountDownComponent.prototype.countdown;\n/** @type {?} */\nCountDownComponent.prototype.date;\n/** @type {?} */\nCountDownComponent.prototype.time;\n/** @type {?} */\nCountDownComponent.prototype.onStart;\n/** @type {?} */\nCountDownComponent.prototype.onComplete;\n/** @type {?} */\nCountDownComponent.prototype.object;\n/** @type {?} */\nCountDownComponent.prototype.singleFormat;\n/** @type {?} */\nCountDownComponent.prototype.selectedtheme;\n/** @type {?} */\nCountDownComponent.prototype._countDownService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CountDownComponent } from './count-down.component';\nimport { CountDownService } from '../services/count-down.service';\nexport class CountDownModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [CountDownComponent],\n  exports: [\n    CountDownComponent\n  ],\n  providers: [CountDownService]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CountDownModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCountDownModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCountDownModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["CountDownService","this","uniquecountdown","countDownOptions","theme","format","prototype","setCoundownOptions","options","countdownOptions","THEMES","indexOf","getdefaultCountDownOptions","dhms","s","f","d","h","m","Math","floor","replace","decorators","type","Injectable","ctorParameters","CountDownComponent","_countDownService","date","onStart","EventEmitter","onComplete","selectedtheme","ngOnInit","startCountDown","isFunction","data","countdown","timeInterval","time","object","singleFormat","emit","JSON","stringify","call","finishTime","that","timer","setInterval","toString","clearInterval","Component","args","selector","template","styles","propDecorators","Input","Output","CountDownModule","NgModule","imports","CommonModule","declarations","exports","providers"],"mappings":"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"}
